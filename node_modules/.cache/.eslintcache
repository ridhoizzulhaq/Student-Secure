[{"/Users/ridhoizzulhaq/student-report/src/index.js":"1","/Users/ridhoizzulhaq/student-report/src/App.js":"2","/Users/ridhoizzulhaq/student-report/src/reportWebVitals.js":"3","/Users/ridhoizzulhaq/student-report/src/pages/CreateReport.js":"4","/Users/ridhoizzulhaq/student-report/src/pages/GetReport.js":"5","/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/index.js":"6","/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/App.js":"7","/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/reportWebVitals.js":"8","/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/pages/CreateReport.js":"9","/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/pages/GetReport.js":"10"},{"size":535,"mtime":1679732864523,"results":"11","hashOfConfig":"12"},{"size":876,"mtime":1679734612587,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1679732864524,"results":"14","hashOfConfig":"12"},{"size":5900,"mtime":1679738417275,"results":"15","hashOfConfig":"12"},{"size":5750,"mtime":1679738426669,"results":"16","hashOfConfig":"12"},{"size":535,"mtime":1679732864523,"results":"17","hashOfConfig":"18"},{"size":876,"mtime":1679734612587,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1679732864524,"results":"20","hashOfConfig":"18"},{"size":5900,"mtime":1679738417275,"results":"21","hashOfConfig":"18"},{"size":5750,"mtime":1679738426669,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"162cm59",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h44zsh",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/ridhoizzulhaq/student-report/src/index.js",[],[],[],"/Users/ridhoizzulhaq/student-report/src/App.js",[],[],"/Users/ridhoizzulhaq/student-report/src/reportWebVitals.js",[],[],"/Users/ridhoizzulhaq/student-report/src/pages/CreateReport.js",["56","57"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nconst CONTRACT_ABI = [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"social\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"math\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"naturalScience\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ReportCreated\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_social\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_math\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_naturalScience\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"createReport\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getReport\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ]; // Your ABI\nconst CONTRACT_ADDRESS = \"0xAD90207213b8C73e0776F9DD10432d14B898a87f\"; // Your contract address\n\nfunction CreateReport() {\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n\n  const reportIdInput = useRef();\n  const nameInput = useRef();\n  const socialInput = useRef();\n  const mathInput = useRef();\n  const naturalScienceInput = useRef();\n\n  useEffect(() => {\n    const init = async () => {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        const web3Instance = new Web3(provider);\n        const contractInstance = new web3Instance.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n        const accounts = await web3Instance.eth.getAccounts();\n\n        setWeb3(web3Instance);\n        setContract(contractInstance);\n        setAccounts(accounts);\n      } else {\n        console.log(\"Please install MetaMask!\");\n      }\n    };\n\n    init();\n  }, []);\n\n  const createReport = async () => {\n    const id = reportIdInput.current?.value;\n    const name = nameInput.current?.value;\n    const social = socialInput.current?.value;\n    const math = mathInput.current?.value;\n    const naturalScience = naturalScienceInput.current?.value;\n\n    if (id && name && social && math && naturalScience) {\n      try {\n        await contract.methods.createReport(id, name, social, math, naturalScience).send({ from: accounts[0] });\n        console.log(\"Report created successfully\");\n      } catch (error) {\n        console.log(\"Error creating report:\", error);\n      }\n    } else {\n      console.log(\"Please make sure all input fields have values.\");\n    }\n  };\n\n  const getReport = async () => {\n    const id = reportIdInput.current?.value;\n\n    if (id) {\n      try {\n        const report = await contract.methods.getReport(id).call();\n        console.log(\"Report:\", report);\n      } catch (error) {\n        console.log(\"Error fetching report:\", error);\n      }\n    } else {\n      console.log(\"Please make sure the ID input field has a value.\");\n    }\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <h2>Create Report (Prtototype for  Teacher)</h2>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"id\">ID</label>\n          <input type=\"number\" className=\"form-control\" id=\"id\" ref={reportIdInput} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input type=\"text\" className=\"form-control\" id=\"name\" ref={nameInput} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"social\">Social</label>\n          <input type=\"number\" className=\"form-control\" id=\"social\" ref={socialInput} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"math\">Math</label>\n          <input type=\"number\" className=\"form-control\" id=\"math\" ref={mathInput} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"naturalScience\">Natural Science</label>\n          <input type=\"number\" className=\"form-control\" id=\"naturalScience\" ref={naturalScienceInput} />\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={createReport}\n        >\n          Create Report\n        </button>\n       \n      </form>\n    </div>\n  );  \n}\n\nexport default CreateReport;\n","/Users/ridhoizzulhaq/student-report/src/pages/GetReport.js",["58","59","60","61","62","63"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\n\nconst CONTRACT_ADDRESS = \"0xAD90207213b8C73e0776F9DD10432d14B898a87f\";\nconst CONTRACT_ABI = [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"social\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"math\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"naturalScience\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ReportCreated\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_social\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_math\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_naturalScience\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"createReport\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getReport\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    } ];\n\nfunction CreateReport() {\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [reportData, setReportData] = useState(null);\n\n  const reportIdInput = useRef();\n  const nameInput = useRef();\n  const socialInput = useRef();\n  const mathInput = useRef();\n  const naturalScienceInput = useRef();\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          const web3Instance = new Web3(provider);\n          setWeb3(web3Instance);\n\n          const contractInstance = new web3Instance.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n          setContract(contractInstance);\n\n          const accounts = await web3Instance.eth.getAccounts();\n          setAccounts(accounts);\n        } else {\n          console.error(\"Please install MetaMask!\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    init();\n  }, []);\n\n  const createReport = async (id, name, social, math, naturalScience) => {\n    try {\n      await contract.methods\n        .createReport(id, name, social, math, naturalScience)\n        .send({ from: accounts[0] });\n      alert(\"Report created successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while creating the report\");\n    }\n  };\n\n  const getReport = async () => {\n    try {\n      const reportId = reportIdInput.current.value;\n      if (!reportId) {\n        alert(\"Please enter a report ID\");\n        return;\n      }\n      const report = await contract.methods.getReport(reportId).call({ from: accounts[0] });\n      setReportData({\n        id: report[0],\n        name: report[1],\n        social: report[2],\n        math: report[3],\n        naturalScience: report[4],\n      });\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the report\");\n    }\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <h2>Get Report (Prototype for Student)</h2>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"id\">ID</label>\n          <input type=\"number\" className=\"form-control\" id=\"id\" ref={reportIdInput} />\n        </div>\n        {/* ... other input fields */}\n      \n      </form>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary mt-4\"\n        onClick={() => getReport()}\n      >\n        Get Report\n      </button>\n\n      {reportData && (\n        <div className=\"mt-4\">\n          <h2>Report Details</h2>\n          <table className=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Social</th>\n            <th>Math</th>\n            <th>Natural Science</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{reportData.id}</td>\n            <td>{reportData.name}</td>\n            <td>{reportData.social}</td>\n            <td>{reportData.math}</td>\n            <td>{reportData.naturalScience}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )}\n</div>\n);\n}\n\nexport default CreateReport;\n","/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/index.js",[],[],"/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/App.js",[],[],"/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/reportWebVitals.js",[],[],"/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/pages/CreateReport.js",["64","65"],[],"/Users/ridhoizzulhaq/Documents/GitHub/Student-Secure/src/pages/GetReport.js",["66","67","68","69","70","71"],[],{"ruleId":"72","severity":1,"message":"73","line":119,"column":10,"nodeType":"74","messageId":"75","endLine":119,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":167,"column":9,"nodeType":"74","messageId":"75","endLine":167,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":119,"column":10,"nodeType":"74","messageId":"75","endLine":119,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":125,"column":9,"nodeType":"74","messageId":"75","endLine":125,"endColumn":18},{"ruleId":"72","severity":1,"message":"78","line":126,"column":9,"nodeType":"74","messageId":"75","endLine":126,"endColumn":20},{"ruleId":"72","severity":1,"message":"79","line":127,"column":9,"nodeType":"74","messageId":"75","endLine":127,"endColumn":18},{"ruleId":"72","severity":1,"message":"80","line":128,"column":9,"nodeType":"74","messageId":"75","endLine":128,"endColumn":28},{"ruleId":"72","severity":1,"message":"81","line":154,"column":9,"nodeType":"74","messageId":"75","endLine":154,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":119,"column":10,"nodeType":"74","messageId":"75","endLine":119,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":167,"column":9,"nodeType":"74","messageId":"75","endLine":167,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":119,"column":10,"nodeType":"74","messageId":"75","endLine":119,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":125,"column":9,"nodeType":"74","messageId":"75","endLine":125,"endColumn":18},{"ruleId":"72","severity":1,"message":"78","line":126,"column":9,"nodeType":"74","messageId":"75","endLine":126,"endColumn":20},{"ruleId":"72","severity":1,"message":"79","line":127,"column":9,"nodeType":"74","messageId":"75","endLine":127,"endColumn":18},{"ruleId":"72","severity":1,"message":"80","line":128,"column":9,"nodeType":"74","messageId":"75","endLine":128,"endColumn":28},{"ruleId":"72","severity":1,"message":"81","line":154,"column":9,"nodeType":"74","messageId":"75","endLine":154,"endColumn":21},"no-unused-vars","'web3' is assigned a value but never used.","Identifier","unusedVar","'getReport' is assigned a value but never used.","'nameInput' is assigned a value but never used.","'socialInput' is assigned a value but never used.","'mathInput' is assigned a value but never used.","'naturalScienceInput' is assigned a value but never used.","'createReport' is assigned a value but never used."]